## When a new alias is added, it should be added to the "omz-zshrc/vars/main.yml" definition.
## In the case that it is a complex alias, the function can be defined within this .zsh file.


function cleanup-branch(){
    branch_to_delete=$(git branch --show-current)
    # Check if repo origin is github
    git config --get remote.origin.url | grep -q github
    if [[ $? != 0 ]]; then
        dest_branch=$(gh repo view --json defaultBranchRef --jq .defaultBranchRef.name)
    else
        # If not github, default branch not main or master currently unsupported.
        dest_branch=$(git config --get remote.origin.url | grep -q github)
    fi
    if [[ $dest_branch = $branch_to_delete ]]; then
        echo "Cannot cleanup $branch_to_delete branch."
    else
        git checkout $dest_branch
        git branch -d $branch_to_delete -q
        git pull
    fi
}

function zalias_title(){
    tput setaf 3
    echo $1
    tput sgr 0
}

function zalias(){
    zalias_title "Available Git Aliases: (usage: git <alias>)"
    tput setaf 7
    if (git config --list | grep -q alias); then

        git config --list | grep alias | while read line
            do
                echo $line | sed 's/alias./\t/' | sed 's/=/\t\t/g'
            done
    fi
    echo ""

    zalias_title "Custom Zsh Aliases:"
    tput setaf 7

{% for item in aliases %}
{% if item.alias|length > 6 %}
    echo -e '\t'{{ item.alias }} '\t'{{ item.description }}
{% else %}
    echo -e '\t'{{ item.alias }} '\t\t'{{ item.description }}
{% endif %}
{% endfor %}

    #revert colors
    tput sgr 0
    echo ""
}

## Register non-git aliases
{% for item in aliases %}
alias {{ item.alias }}="{{ item.command }}"
{% endfor %}

tput setaf 3
echo "Alias help: type 'zalias'"
echo ""
tput sgr 0
